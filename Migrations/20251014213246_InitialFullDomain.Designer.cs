// <auto-generated />
using System;
using CazuelaChapina.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CazuelaChapina.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251014213246_InitialFullDomain")]
    partial class InitialFullDomain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("CazuelaChapina.API.Models.Bebida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int>("Endulzante")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tamano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Topping")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bebidas");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsEditableEnProduccion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.ComboItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BebidaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComboId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notas")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TamalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoProducto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BebidaId");

                    b.HasIndex("ComboId");

                    b.HasIndex("TamalId");

                    b.ToTable("ComboItems");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.InventarioMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 4)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostoTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostoUnitario")
                        .HasPrecision(18, 4)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("MateriaPrimaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notas")
                        .HasColumnType("TEXT");

                    b.Property<string>("Referencia")
                        .HasColumnType("TEXT");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MateriaPrimaId");

                    b.HasIndex("SucursalId");

                    b.ToTable("InventarioMovimientos");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.InventarioSaldo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 4)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostoPromedio")
                        .HasPrecision(18, 4)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int>("MateriaPrimaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MetodoCosto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MateriaPrimaId");

                    b.HasIndex("SucursalId", "MateriaPrimaId")
                        .IsUnique();

                    b.ToTable("InventarioSaldos");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Llm.LlmPromptLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HttpStatus")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("LatenciaMs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Respuesta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LlmLogs");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.LoteCoccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CantidadObtenida")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadProgramada")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notas")
                        .HasColumnType("TEXT");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TamalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SucursalId");

                    b.HasIndex("TamalId");

                    b.ToTable("LotesCoccion");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.MateriaPrima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PuntoCritico")
                        .HasPrecision(18, 4)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MateriasPrimas");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.NotificacionEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoteCoccionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("VentaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contacto")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notas")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoProducto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TipoProducto", "ProductoId")
                        .IsUnique();

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.RecetaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CantidadPorUnidad")
                        .HasPrecision(18, 4)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int>("MateriaPrimaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecetaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MateriaPrimaId");

                    b.HasIndex("RecetaId");

                    b.ToTable("RecetaItems");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Tamal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int>("Envoltura")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Masa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Picante")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("Relleno")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sku")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tamales");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.TamalPresentacionPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("Presentacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TamalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TamalId", "Presentacion")
                        .IsUnique();

                    b.ToTable("TamalPresentaciones");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Impuestos")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("MedioPago")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Fecha");

                    b.HasIndex("SucursalId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.VentaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualizadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BebidaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComboId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Picante")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TamalId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TamanoBebida")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TipoBebida")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoProducto")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalLinea")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("VentaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BebidaId");

                    b.HasIndex("ComboId");

                    b.HasIndex("TamalId");

                    b.HasIndex("VentaId");

                    b.HasIndex("TipoProducto", "TamalId", "BebidaId", "ComboId");

                    b.ToTable("VentaItems");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.ComboItem", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Bebida", "Bebida")
                        .WithMany()
                        .HasForeignKey("BebidaId");

                    b.HasOne("CazuelaChapina.API.Models.Combo", "Combo")
                        .WithMany("Items")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Tamal", "Tamal")
                        .WithMany()
                        .HasForeignKey("TamalId");

                    b.Navigation("Bebida");

                    b.Navigation("Combo");

                    b.Navigation("Tamal");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.InventarioMovimiento", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("MateriaPrimaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MateriaPrima");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.InventarioSaldo", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("MateriaPrimaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Sucursal", "Sucursal")
                        .WithMany("Saldos")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MateriaPrima");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.LoteCoccion", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Tamal", "Tamal")
                        .WithMany()
                        .HasForeignKey("TamalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");

                    b.Navigation("Tamal");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.RecetaItem", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("MateriaPrimaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CazuelaChapina.API.Models.Receta", "Receta")
                        .WithMany("Items")
                        .HasForeignKey("RecetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MateriaPrima");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.TamalPresentacionPrecio", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Tamal", "Tamal")
                        .WithMany()
                        .HasForeignKey("TamalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tamal");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Venta", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.VentaItem", b =>
                {
                    b.HasOne("CazuelaChapina.API.Models.Bebida", "Bebida")
                        .WithMany()
                        .HasForeignKey("BebidaId");

                    b.HasOne("CazuelaChapina.API.Models.Combo", "Combo")
                        .WithMany()
                        .HasForeignKey("ComboId");

                    b.HasOne("CazuelaChapina.API.Models.Tamal", "Tamal")
                        .WithMany()
                        .HasForeignKey("TamalId");

                    b.HasOne("CazuelaChapina.API.Models.Venta", "Venta")
                        .WithMany("Items")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bebida");

                    b.Navigation("Combo");

                    b.Navigation("Tamal");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Combo", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Receta", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Sucursal", b =>
                {
                    b.Navigation("Saldos");
                });

            modelBuilder.Entity("CazuelaChapina.API.Models.Venta", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
